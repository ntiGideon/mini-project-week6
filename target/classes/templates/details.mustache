{{<base}}
    {{$title}}{{image.name}} | Photo Details{{/title}}
    {{$content}}
        <section class="section px-4">
            <div class="container">
                <!-- Back Button -->
                <div class="mb-6">
                    <a href="/" class="back-button">
                        <span class="icon">
                            <i class="fas fa-arrow-left"></i>
                        </span>
                        <span>Back to Gallery</span>
                    </a>
                </div>

                <!-- Main Content -->
                <div class="detail-container">
                    <!-- Image Display -->
                    <div class="image-display-panel">
                        <div class="image-frame">
                            <img src="{{image.s3Url}}" alt="{{image.name}}" class="main-image">
                            <div class="image-actions">
                                <button class="action-button zoom-button">
                                    <i class="fas fa-expand"></i>
                                </button>
                                <a href="{{image.s3Url}}" download class="action-button download-button">
                                    <i class="fas fa-download"></i>
                                </a>
                            </div>
                        </div>
                    </div>

                    <!-- Info Panel -->
                    <div class="info-panel">
                        <div class="info-header">
                            <h1 class="image-title">{{image.name}}</h1>
                            {{#image.featured}}
                                <span class="featured-badge">
                                <i class="fas fa-star"></i> Featured
                            </span>
                            {{/image.featured}}
                        </div>

                        <div class="image-meta">
                            <span class="meta-item">
                                <i class="fas fa-calendar"></i> {{image.createdAt}}
                            </span>
                            <span class="meta-item">
                                <i class="fas fa-image"></i> {{image.resolution}}
                            </span>
                        </div>

                        <div class="image-description">
                            <p>{{image.description}}</p>
                        </div>

                        <div class="action-buttons">
                            <button class="share-button">
                                <i class="fas fa-share-alt"></i> Share
                            </button>
                            <button class="favorite-button">
                                <i class="fas fa-heart"></i> Favorite
                            </button>
                            <!-- Add this delete button -->
                            <button class="delete-button" data-id="{{image.id}}">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Related Images -->
                {{#hasRelated}}
                    <div class="related-section">
                        <h2 class="section-title has-text-white">More Like This</h2>
                        <div class="related-grid">
                            {{#relatedImages}}
                                <a href="/images/{{id}}" class="related-card">
                                    <img src="{{s3Url}}" alt="{{name}}">
                                    <div class="related-overlay">
                                        <i class="fas fa-eye"></i>
                                    </div>
                                </a>
                            {{/relatedImages}}
                        </div>
                    </div>
                {{/hasRelated}}
            </div>
        </section>

        <style>
            /* Color Scheme */
            :root {
                --primary: #4361ee;
                --primary-light: #4895ef;
                --secondary: #3f37c9;
                --dark: #1a1a2e;
                --light: #f8f9fa;
                --gray: #6c757d;
                --light-gray: #e9ecef;
            }

            /* Base Styles */
            .back-button {
                display: inline-flex;
                align-items: center;
                color: var(--primary);
                font-weight: 500;
                padding: 0.5rem 1rem;
                border-radius: 50px;
                transition: all 0.3s ease;
            }

            .back-button:hover {
                background-color: rgba(67, 97, 238, 0.1);
                transform: translateX(-5px);
            }

            .back-button .icon {
                margin-right: 0.5rem;
            }

            /* Detail Container */
            .detail-container {
                display: grid;
                grid-template-columns: 1.5fr 1fr;
                gap: 2rem;
                margin-bottom: 3rem;
            }

            /* Image Display */
            .image-display-panel {
                background-color: white;
                border-radius: 12px;
                box-shadow: 0 10px 30px rgba(0,0,0,0.1);
                overflow: hidden;
                position: relative;
            }

            .image-frame {
                position: relative;
                padding-top: 75%; /* 4:3 aspect ratio */
                background-color: #f5f5f5;
            }

            .main-image {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                object-fit: contain;
                padding: 1rem;
            }

            .image-actions {
                position: absolute;
                bottom: 1rem;
                right: 1rem;
                display: flex;
                gap: 0.5rem;
                z-index: 10;
            }

            .action-button {
                width: 40px;
                height: 40px;
                border-radius: 50%;
                background-color: white;
                color: var(--dark);
                border: none;
                display: flex;
                align-items: center;
                justify-content: center;
                box-shadow: 0 4px 10px rgba(0,0,0,0.1);
                cursor: pointer;
                transition: all 0.2s ease;
            }

            .action-button:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 15px rgba(0,0,0,0.15);
            }

            .download-button {
                color: var(--primary);
            }

            /* Info Panel */
            .info-panel {
                background-color: white;
                border-radius: 12px;
                box-shadow: 0 10px 30px rgba(0,0,0,0.1);
                padding: 2rem;
            }

            .info-header {
                display: flex;
                justify-content: space-between;
                align-items: flex-start;
                margin-bottom: 1.5rem;
            }

            .image-title {
                font-size: 1.75rem;
                font-weight: 700;
                color: var(--dark);
                margin: 0;
                line-height: 1.3;
            }

            .featured-badge {
                background-color: var(--primary-light);
                color: white;
                padding: 0.25rem 0.75rem;
                border-radius: 50px;
                font-size: 0.875rem;
                font-weight: 500;
                display: inline-flex;
                align-items: center;
            }

            .featured-badge i {
                margin-right: 0.25rem;
                font-size: 0.75rem;
            }

            .image-meta {
                display: flex;
                gap: 1.5rem;
                margin-bottom: 1.5rem;
                color: var(--gray);
                font-size: 0.9rem;
            }

            .meta-item {
                display: flex;
                align-items: center;
            }

            .meta-item i {
                margin-right: 0.5rem;
                color: var(--primary);
            }

            .image-description {
                line-height: 1.6;
                color: var(--dark);
                margin-bottom: 2rem;
                padding-bottom: 1.5rem;
                border-bottom: 1px solid var(--light-gray);
            }

            .action-buttons {
                display: flex;
                gap: 1rem;
            }

            .share-button, .favorite-button {
                flex: 1;
                padding: 0.75rem;
                border-radius: 8px;
                font-weight: 500;
                display: flex;
                align-items: center;
                justify-content: center;
                gap: 0.5rem;
                cursor: pointer;
                transition: all 0.2s ease;
            }

            .share-button {
                background-color: var(--primary);
                color: white;
                border: none;
            }

            .share-button:hover {
                background-color: var(--secondary);
                transform: translateY(-2px);
            }

            .favorite-button {
                background-color: white;
                color: var(--dark);
                border: 1px solid var(--light-gray);
            }

            .favorite-button:hover {
                background-color: var(--light-gray);
                transform: translateY(-2px);
            }

            /* Related Images */
            .related-section {
                margin-top: 3rem;
            }

            .section-title {
                font-size: 1.5rem;
                font-weight: 600;
                color: var(--dark);
                margin-bottom: 1.5rem;
                text-align: center;
            }

            .related-grid {
                display: grid;
                grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
                gap: 1.5rem;
            }

            .related-card {
                position: relative;
                border-radius: 8px;
                overflow: hidden;
                box-shadow: 0 4px 10px rgba(0,0,0,0.1);
                aspect-ratio: 4/3;
                transition: all 0.3s ease;
            }

            .related-card img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }

            .delete-button {
                flex: 1;
                padding: 0.75rem;
                border-radius: 8px;
                font-weight: 500;
                display: flex;
                align-items: center;
                justify-content: center;
                gap: 0.5rem;
                cursor: pointer;
                transition: all 0.2s ease;
                background-color: #ff4757;
                color: white;
                border: none;
            }

            .delete-button:hover {
                background-color: #e84118;
                transform: translateY(-2px);
            }

            .related-overlay {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0,0,0,0.4);
                display: flex;
                align-items: center;
                justify-content: center;
                opacity: 0;
                transition: opacity 0.3s ease;
                color: white;
                font-size: 1.5rem;
            }

            .related-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0,0,0,0.15);
            }

            .related-card:hover .related-overlay {
                opacity: 1;
            }

            /* Responsive Design */
            @media (max-width: 1024px) {
                .detail-container {
                    grid-template-columns: 1fr;
                }

                .image-frame {
                    padding-top: 56.25%; /* 16:9 aspect ratio */
                }
            }

            @media (max-width: 768px) {
                .image-meta {
                    flex-direction: column;
                    gap: 0.5rem;
                }

                .action-buttons {
                    flex-direction: column;
                }

                .related-grid {
                    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
                }
            }
        </style>

        <script>

            // Delete functionality
            document.querySelector('.delete-button').addEventListener('click', function() {
                const imageId = this.getAttribute('data-id');
                if (confirm('Are you sure you want to delete this image? This action cannot be undone.')) {
                    fetch(`/images/${imageId}`, {
                        method: 'DELETE'
                    })
                            .then(response => {
                                if (response.ok) {
                                    window.location.href = '/';
                                } else {
                                    alert('Failed to delete image');
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                alert('An error occurred while deleting the image');
                            });
                }
            });


            // Update the download button functionality
            document.querySelector('.download-button').addEventListener('click', function(e) {
                e.preventDefault();

                const button = this;
                const originalText = button.innerHTML;

                // Show loading state
                button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Preparing...';
                button.disabled = true;

                // Get the image ID from the page (you may need to add a data attribute)
                const imageId = document.querySelector('[data-image-id]').getAttribute('data-image-id');

                // Trigger download
                fetch(`/images/${imageId}/download`)
                        .then(response => {
                            if (!response.ok) throw new Error('Download failed');
                            return response.blob();
                        })
                        .then(blob => {
                            // Create download link
                            const url = window.URL.createObjectURL(blob);
                            const a = document.createElement('a');
                            a.href = url;

                            // Get filename from content-disposition header
                            const contentDisposition = response.headers.get('content-disposition');
                            let filename = 'image';
                            if (contentDisposition) {
                                const filenameMatch = contentDisposition.match(/filename="?(.+)"?/);
                                if (filenameMatch && filenameMatch[1]) {
                                    filename = filenameMatch[1];
                                }
                            }

                            a.download = filename;
                            document.body.appendChild(a);
                            a.click();
                            window.URL.revokeObjectURL(url);
                            a.remove();
                        })
                        .catch(error => {
                            console.error('Download error:', error);
                            alert('Failed to download image: ' + error.message);
                        })
                        .finally(() => {
                            // Reset button state
                            button.innerHTML = originalText;
                            button.disabled = false;
                        });
            });

            // Zoom functionality
            document.querySelector('.zoom-button').addEventListener('click', function() {
                const img = document.querySelector('.main-image');
                if (!document.fullscreenElement) {
                    img.requestFullscreen().catch(err => {
                        alert(`Error attempting to enable fullscreen: ${err.message}`);
                    });
                } else {
                    document.exitFullscreen();
                }
            });

            // Share functionality
            document.querySelector('.share-button').addEventListener('click', function() {
                if (navigator.share) {
                    navigator.share({
                        title: '{{image.name}}',
                        text: 'Check out this image from our gallery',
                        url: window.location.href
                    }).catch(err => {
                        console.error('Error sharing:', err);
                    });
                } else {
                    // Fallback for browsers without Web Share API
                    const shareUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent('Check out this image: ' + image.name)}&url=${encodeURIComponent(window.location.href)}`;
                    window.open(shareUrl, '_blank');
                }
            });

            // Favorite functionality
            document.querySelector('.favorite-button').addEventListener('click', function() {
                this.classList.toggle('active');
                if (this.classList.contains('active')) {
                    this.innerHTML = '<i class="fas fa-heart"></i> Favorited';
                    this.style.color = '#ff4757';
                } else {
                    this.innerHTML = '<i class="fas fa-heart"></i> Favorite';
                    this.style.color = '';
                }
            });
        </script>
    {{/content}}
{{/base}}